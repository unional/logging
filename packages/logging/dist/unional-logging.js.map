{"version":3,"sources":["webpack://UnionalLogging/webpack/bootstrap","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/store.ts","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/aurelia-logging/dist/commonjs/aurelia-logging.js","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/SimpleConsoleAppender.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/index.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/Appender.ts","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/global-store/dist-es5/index.js","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/getLogger.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/getLogMethodName.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/setDefaultAppender.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/setLevels.ts","webpack://UnionalLogging/src/Users/hwong/code/unional/logging/packages/logging/src/getLoggers.ts","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/type-plus/lib/index.js","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/type-plus/lib/findKey.js","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/type-plus/lib/forEachKey.js","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/type-plus/lib/mapKey.js","webpack://UnionalLogging//Users/hwong/code/unional/logging/node_modules/type-plus/lib/reduceKey.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","aurelia_logging_1","global_store_1","defaultValue","defaultAppender","SimpleConsoleAppender","logs","logLevel","none","appenders","store","getLogger","id","loggers","Logger","addAppender","appender","push","connectLoggers","removeAppender","filter","a","getAppenders","concat","clearAppenders","proto","_level2","addCustomLevel","Error","isNaN","length","removeCustomLevel","isStandardLevel","setLevel","level","globalDefaultLevel","getLevel","error","warn","info","debug","standardLevels","appendArgs","this","Array","slice","arguments","logFactory","threshold","args","apply","_appenders$i","logFactoryCustom","_level","cached","message","isDebugEnabled","logger","rest","_i","console","__export","hasAppenders","store_1","hasAppender","apps","globalState","set","getLogMethodName_1","defaultLogLevel","LoggerImpl","_this","_a","forEach","onError","logfn","on","onWarn","onInfo","onDebug","methodName","getLogMethodName","bindedMethod","result","setDefaultAppender","getLoggers_1","type_plus_1","setLevels","getLoggers","map","log","forEachKey","keys","test","k","findKey","subject","predicate","thisArg","find","callbackfn","mapKey","reduceKey","initialValue","reduce"],"mappings":"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","file":"unional-logging.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { logLevel } from 'aurelia-logging';\nimport { create } from 'global-store';\nimport { Appender, Logger } from './interfaces';\nimport { SimpleConsoleAppender } from './SimpleConsoleAppender';\n\nexport interface LoggingStore {\n  defaultAppender: Appender\n  logs: { [id: string]: Logger },\n  appenders: Appender[],\n  logLevel: number\n}\n\nconst defaultValue: LoggingStore = {\n  defaultAppender: new SimpleConsoleAppender(),\n  logs: {},\n  logLevel: logLevel.none,\n  appenders: []\n}\n\nexport const store = create('@unional/logging', defaultValue)\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogger = getLogger;\nexports.addAppender = addAppender;\nexports.removeAppender = removeAppender;\nexports.getAppenders = getAppenders;\nexports.clearAppenders = clearAppenders;\nexports.addCustomLevel = addCustomLevel;\nexports.removeCustomLevel = removeCustomLevel;\nexports.setLevel = setLevel;\nexports.getLevel = getLevel;\n\n\n\nvar logLevel = exports.logLevel = {\n  none: 0,\n  error: 10,\n  warn: 20,\n  info: 30,\n  debug: 40\n};\n\nvar loggers = {};\nvar appenders = [];\nvar globalDefaultLevel = logLevel.none;\n\nvar standardLevels = ['none', 'error', 'warn', 'info', 'debug'];\nfunction isStandardLevel(level) {\n  return standardLevels.filter(function (l) {\n    return l === level;\n  }).length > 0;\n}\n\nfunction appendArgs() {\n  return [this].concat(Array.prototype.slice.call(arguments));\n}\n\nfunction logFactory(level) {\n  var threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    var args = appendArgs.apply(this, arguments);\n    var i = appenders.length;\n    while (i--) {\n      var _appenders$i;\n\n      (_appenders$i = appenders[i])[level].apply(_appenders$i, args);\n    }\n  };\n}\n\nfunction logFactoryCustom(level) {\n  var threshold = logLevel[level];\n  return function () {\n    if (this.level < threshold) {\n      return;\n    }\n\n    var args = appendArgs.apply(this, arguments);\n    var i = appenders.length;\n    while (i--) {\n      var appender = appenders[i];\n      if (appender[level] !== undefined) {\n        appender[level].apply(appender, args);\n      }\n    }\n  };\n}\n\nfunction connectLoggers() {\n  var proto = Logger.prototype;\n  for (var _level in logLevel) {\n    if (isStandardLevel(_level)) {\n      if (_level !== 'none') {\n        proto[_level] = logFactory(_level);\n      }\n    } else {\n      proto[_level] = logFactoryCustom(_level);\n    }\n  }\n}\n\nfunction disconnectLoggers() {\n  var proto = Logger.prototype;\n  for (var _level2 in logLevel) {\n    if (_level2 !== 'none') {\n      proto[_level2] = function () {};\n    }\n  }\n}\n\nfunction getLogger(id) {\n  return loggers[id] || new Logger(id);\n}\n\nfunction addAppender(appender) {\n  if (appenders.push(appender) === 1) {\n    connectLoggers();\n  }\n}\n\nfunction removeAppender(appender) {\n  appenders = appenders.filter(function (a) {\n    return a !== appender;\n  });\n}\n\nfunction getAppenders() {\n  return [].concat(appenders);\n}\n\nfunction clearAppenders() {\n  appenders = [];\n  disconnectLoggers();\n}\n\nfunction addCustomLevel(name, value) {\n  if (logLevel[name] !== undefined) {\n    throw Error('Log level \"' + name + '\" already exists.');\n  }\n\n  if (isNaN(value)) {\n    throw Error('Value must be a number.');\n  }\n\n  logLevel[name] = value;\n\n  if (appenders.length > 0) {\n    connectLoggers();\n  } else {\n    Logger.prototype[name] = function () {};\n  }\n}\n\nfunction removeCustomLevel(name) {\n  if (logLevel[name] === undefined) {\n    return;\n  }\n\n  if (isStandardLevel(name)) {\n    throw Error('Built-in log level \"' + name + '\" cannot be removed.');\n  }\n\n  delete logLevel[name];\n  delete Logger.prototype[name];\n}\n\nfunction setLevel(level) {\n  globalDefaultLevel = level;\n  for (var key in loggers) {\n    loggers[key].setLevel(level);\n  }\n}\n\nfunction getLevel() {\n  return globalDefaultLevel;\n}\n\nvar Logger = exports.Logger = function () {\n  function Logger(id) {\n    \n\n    var cached = loggers[id];\n    if (cached) {\n      return cached;\n    }\n\n    loggers[id] = this;\n    this.id = id;\n    this.level = globalDefaultLevel;\n  }\n\n  Logger.prototype.debug = function debug(message) {};\n\n  Logger.prototype.info = function info(message) {};\n\n  Logger.prototype.warn = function warn(message) {};\n\n  Logger.prototype.error = function error(message) {};\n\n  Logger.prototype.setLevel = function setLevel(level) {\n    this.level = level;\n  };\n\n  Logger.prototype.isDebugEnabled = function isDebugEnabled() {\n    return this.level === logLevel.debug;\n  };\n\n  return Logger;\n}();","/**\n * Simple console appender will send log values to console without the logger id.\n * This means the log will be identical to normal console logs.\n */\nexport class SimpleConsoleAppender {\n  debug(logger: {}, ...rest: any[]) {\n    console.debug(...rest)\n  }\n  info(logger: {}, ...rest: any[]) {\n    console.info(...rest)\n  }\n  warn(logger: {}, ...rest: any[]) {\n    console.warn(...rest)\n  }\n  error(logger: {}, ...rest: any[]) {\n    console.error(...rest)\n  }\n}\n","import { LogLevel, logLevel } from 'aurelia-logging';\n\nexport * from './Appender';\nexport * from './getLogger';\nexport * from './interfaces';\nexport * from './setDefaultAppender';\nexport * from './setLevels';\nexport * from './SimpleConsoleAppender';\nexport { LogLevel, logLevel };\n\n","import { Appender } from './interfaces';\nimport { store } from './store';\n\nlet hasAppenders: boolean\nexport function hasAppender() {\n  return hasAppenders\n}\n\nexport function addAppender(appender: Appender) {\n  store.get().appenders.push(appender)\n  hasAppenders = true\n}\n\nexport function removeAppender(appender: Appender) {\n  const apps = store.get().appenders = store.get().appenders.filter(a => a !== appender)\n  hasAppenders = apps && apps.length > 0\n}\n\nexport function clearAppenders() {\n  store.get().appenders = []\n  hasAppenders = false\n}\n\nexport function getAppenders() {\n  return store.get().appenders\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalState = {};\n/**\n * Gets a value.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nfunction get(id, defaultValue) {\n    return globalState[id] = globalState[id] || defaultValue;\n}\nexports.get = get;\n/**\n * Sets a value.\n * @param id The unique identifier of the store.\n * @param value Any value you want to save.\n */\nfunction set(id, value) {\n    globalState[id] = value;\n}\nexports.set = set;\n/**\n * Creates a store of type T.\n * @param id A unique identifier to the store.\n * It can be a symbol created from `Symbol.for(key)`,\n * or a runtime-wide unique string:\n * You should make it descriptive.\n * You should use your module's name or unique key as part of the id.\n * You can add some secret random string to it.\n * e.g. `my-module:some-purpose:some-random-string`\n * @param defaultValue Optional default value.\n */\nfunction create(id, defaultValue) {\n    return {\n        get: function () {\n            return get(id, defaultValue);\n        },\n        set: function (value) {\n            set(id, value);\n        }\n    };\n}\nexports.create = create;\nexports.default = create;\n//# sourceMappingURL=index.js.map","import { logLevel } from 'aurelia-logging';\nimport { getLogMethodName } from './getLogMethodName';\nimport { LogFunction, Logger } from './interfaces';\nimport { store } from './store';\n\nexport function getLogger(id: string, defaultLogLevel?: number): Logger {\n  const { logs } = store.get()\n  if (logs[id]) return logs[id]\n\n  return logs[id] = new LoggerImpl(id, defaultLogLevel)\n}\n\nclass LoggerImpl {\n  level: number\n  constructor(public id: string, defaultLogLevel?: number) {\n    if (defaultLogLevel !== undefined) {\n      this.level = defaultLogLevel\n    }\n    else {\n      this.level = store.get().logLevel\n    }\n  }\n  error(...args: any[]) {\n    if (this.level >= logLevel.error) {\n      const { appenders, defaultAppender } = store.get()\n      if (appenders.length === 0) defaultAppender.error(this, ...args)\n      appenders.forEach(a => a.error(this, ...args))\n    }\n  }\n  warn(...args: any[]) {\n    if (this.level >= logLevel.warn) {\n      const { appenders, defaultAppender } = store.get()\n      if (appenders.length === 0) defaultAppender.warn(this, ...args)\n      appenders.forEach(a => a.warn(this, ...args))\n    }\n  }\n  info(...args: any[]) {\n    if (this.level >= logLevel.info) {\n      const { appenders, defaultAppender } = store.get()\n      if (appenders.length === 0) defaultAppender.info(this, ...args)\n      appenders.forEach(a => a.info(this, ...args))\n    }\n  }\n  debug(...args: any[]) {\n    if (this.level >= logLevel.debug) {\n      const { appenders, defaultAppender } = store.get()\n      if (appenders.length === 0) defaultAppender.debug(this, ...args)\n      appenders.forEach(a => a.debug(this, ...args))\n    }\n  }\n  onError(logfn: LogFunction) {\n    this.on(logLevel.error, logfn)\n  }\n  onWarn(logfn: LogFunction) {\n    this.on(logLevel.warn, logfn)\n  }\n  onInfo(logfn: LogFunction) {\n    this.on(logLevel.info, logfn)\n  }\n  onDebug(logfn: LogFunction) {\n    this.on(logLevel.debug, logfn)\n  }\n  on(logLevel: number, logfn: LogFunction) {\n    if (this.level >= logLevel) {\n      const methodName = getLogMethodName(logLevel)\n      if (methodName) {\n        const bindedMethod = this[methodName].bind(this)\n        const result = logfn(bindedMethod)\n        if (result) bindedMethod(result)\n      }\n    }\n  }\n}\n","import { logLevel } from 'aurelia-logging';\n\nexport function getLogMethodName(level: number) {\n  if (level >= logLevel.debug) return 'debug'\n  if (level >= logLevel.info) return 'info'\n  if (level >= logLevel.warn) return 'warn'\n  if (level >= logLevel.error) return 'error'\n  return undefined\n}\n","\nimport { Appender } from './interfaces';\nimport { store } from './store';\n\nexport function setDefaultAppender(defaultAppender: Appender) {\n  const s = store.get()\n  s.defaultAppender = defaultAppender\n}\n","import { getLoggers } from './getLoggers'\nimport { Logger } from './interfaces'\nimport { store } from './store';\nimport { forEachKey } from 'type-plus'\n/**\n * Sets log level based on filter.\n * @param logLevel Use logLevel.* to set this value. 0 - none; 10 - error; 20 - warn; 30 - info; 40 - debug\n */\nexport function setLevels(filter: RegExp, logLevel: number): Logger[] {\n  return getLoggers(filter).map(log => {\n    log.level = logLevel\n    return log\n  })\n}\n\nexport function setLevel(logLevel: number) {\n  const logs = store.get().logs\n  forEachKey(logs, key => logs[key].level = logLevel)\n  store.get().logLevel = logLevel\n}\n\nexport function getLevel() {\n  return store.get().logLevel\n}\n","import { store } from './store'\nimport { Logger } from './interfaces'\n\n/**\n * Get loggers based on RegExp.\n * @param filter RegExp to look for loggers\n */\nexport function getLoggers(filter: RegExp): Logger[] {\n  const { logs } = store.get()\n  const keys = Object.keys(logs).filter(id => filter.test(id))\n  return keys.map(k => logs[k])\n}\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nexports.__esModule = true;\n__export(require(\"./findKey\"));\n__export(require(\"./forEachKey\"));\n__export(require(\"./mapKey\"));\n__export(require(\"./reduceKey\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nexports.__esModule = true;\nfunction findKey(subject, predicate, thisArg) {\n    return Object.keys(subject).find(predicate, thisArg);\n}\nexports.findKey = findKey;\n//# sourceMappingURL=findKey.js.map","\"use strict\";\nexports.__esModule = true;\nfunction forEachKey(subject, callbackfn, thisArg) {\n    return Object.keys(subject).forEach(callbackfn, thisArg);\n}\nexports.forEachKey = forEachKey;\n//# sourceMappingURL=forEachKey.js.map","\"use strict\";\nexports.__esModule = true;\nfunction mapKey(subject, callbackfn, thisArg) {\n    return Object.keys(subject).map(callbackfn, thisArg);\n}\nexports.mapKey = mapKey;\n//# sourceMappingURL=mapKey.js.map","\"use strict\";\nexports.__esModule = true;\nfunction reduceKey(subject, callbackfn, initialValue) {\n    return Object.keys(subject).reduce(callbackfn, initialValue);\n}\nexports.reduceKey = reduceKey;\n//# sourceMappingURL=reduceKey.js.map"],"sourceRoot":""}