{"version":3,"sources":["webpack://AureliaLoggingSimpleConsole/webpack/bootstrap","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/process/browser.js","webpack://AureliaLoggingSimpleConsole/./src/index.ts","webpack://AureliaLoggingSimpleConsole/(webpack)/buildin/global.js","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/is-node/index.js","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/semver/semver.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","a","__importDefault","is_node_1","semver_1","SimpleConsoleAppender","debug","logger","rest","_i","global","versionString","startsWith","slice","gt","console","log","info","warn","error","g","Function","window","node","SemVer","NODE_DEBUG","test","unshift","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","parse","options","loose","includePrerelease","er","TypeError","trim","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","valid","v","clean","replace","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","b","inc","release","identifier","isNaN","diff","version1","version2","eq","v1","v2","prefix","defaultResult","numeric","anum","bnum","lt","neq","gte","lte","cmp","op","Comparator","comp","semver","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","Range","range","set","parseRange","filter","isX","toLowerCase","hyphenReplace","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","ret","gtlt","xM","xm","xp","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","max","maxSV","rangeObj","minSatisfying","min","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","coerce"],"mappings":"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","file":"aurelia-logging-simple-console.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import isNode from 'is-node'\nimport semver from 'semver'\n\n/**\n * Simple console appender will send log values to console without the logger id.\n * This means the log will be identical to normal console logs.\n */\nexport class SimpleConsoleAppender {\n  debug(logger: {}, ...rest: any[]) {\n    // istanbul ignore next\n    if (isConsoleDebugAvailable())\n      console.debug(...rest)\n    else\n      console.log(...rest)\n  }\n  info(logger: {}, ...rest: any[]) {\n    console.info(...rest)\n  }\n  warn(logger: {}, ...rest: any[]) {\n    console.warn(...rest)\n  }\n  error(logger: {}, ...rest: any[]) {\n    console.error(...rest)\n  }\n}\n\n// istanbul ignore next\nfunction isConsoleDebugAvailable() {\n  if (!isNode) return true\n  // without this, systemjs will complain `process is not defined`\n  if (!global.process) return true\n  const versionString = process.version.startsWith('v') ? process.version.slice(1) : process.version\n  return semver.gt(versionString, '9.3.0')\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Coding standard for this project defined @ https://github.com/MatthewSH/standards/blob/master/JavaScript.md\n'use strict';\n\nexports = module.exports = !!(typeof process !== 'undefined' && process.versions && process.versions.node);\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n"],"sourceRoot":""}