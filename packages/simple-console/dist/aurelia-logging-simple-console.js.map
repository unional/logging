{"version":3,"sources":["webpack://AureliaLoggingSimpleConsole/webpack/bootstrap","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/process/browser.js","webpack://AureliaLoggingSimpleConsole/./src/index.ts","webpack://AureliaLoggingSimpleConsole/(webpack)/buildin/global.js","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/is-node/index.js","webpack://AureliaLoggingSimpleConsole//Users/hwong/code/unional/logging/node_modules/semver/semver.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","a","__importDefault","is_node_1","semver_1","SimpleConsoleAppender","debug","logger","rest","_i","global","versionString","startsWith","slice","gt","console","log","info","warn","error","g","Function","window","node","SemVer","NODE_DEBUG","test","unshift","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","RegExp","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","parse","options","loose","includePrerelease","er","TypeError","trim","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","valid","v","clean","replace","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","b","inc","release","identifier","isNaN","diff","version1","version2","eq","v1","v2","numeric","anum","bnum","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","semver","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","Range","range","set","parseRange","filter","isX","toLowerCase","hyphenReplace","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","_","M","pr","charAt","gtlt","xM","xm","xp","some","thisComparators","every","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","max","maxSV","rangeObj","minSatisfying","min","minSV","validRange","ltr","gtr","parsed","r1","r2","coerce"],"mappings":"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","file":"aurelia-logging-simple-console.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import isNode from 'is-node'\nimport semver from 'semver'\n\n/**\n * Simple console appender will send log values to console without the logger id.\n * This means the log will be identical to normal console logs.\n */\nexport class SimpleConsoleAppender {\n  debug(logger: {}, ...rest: any[]) {\n    // istanbul ignore next\n    if (isConsoleDebugAvailable())\n      console.debug(...rest)\n    else\n      console.log(...rest)\n  }\n  info(logger: {}, ...rest: any[]) {\n    console.info(...rest)\n  }\n  warn(logger: {}, ...rest: any[]) {\n    console.warn(...rest)\n  }\n  error(logger: {}, ...rest: any[]) {\n    console.error(...rest)\n  }\n}\n\n// istanbul ignore next\nfunction isConsoleDebugAvailable() {\n  if (!isNode) return true\n  // without this, systemjs will complain `process is not defined`\n  if (!global.process) return true\n  const versionString = process.version.startsWith('v') ? process.version.slice(1) : process.version\n  return semver.gt(versionString, '9.3.0')\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Coding standard for this project defined @ https://github.com/MatthewSH/standards/blob/master/JavaScript.md\n'use strict';\n\nexports = module.exports = !!(typeof process !== 'undefined' && process.versions && process.versions.node);\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n"],"sourceRoot":""}